/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as MonthlyBudgetRouteImport } from './routes/monthly-budget'
import { Route as AssistantRouteImport } from './routes/assistant'
import { Route as IndexRouteImport } from './routes/index'
import { Route as BudgetYearMonthRouteImport } from './routes/budget.$year.$month'

const MonthlyBudgetRoute = MonthlyBudgetRouteImport.update({
  id: '/monthly-budget',
  path: '/monthly-budget',
  getParentRoute: () => rootRouteImport,
} as any)
const AssistantRoute = AssistantRouteImport.update({
  id: '/assistant',
  path: '/assistant',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const BudgetYearMonthRoute = BudgetYearMonthRouteImport.update({
  id: '/budget/$year/$month',
  path: '/budget/$year/$month',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/assistant': typeof AssistantRoute
  '/monthly-budget': typeof MonthlyBudgetRoute
  '/budget/$year/$month': typeof BudgetYearMonthRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/assistant': typeof AssistantRoute
  '/monthly-budget': typeof MonthlyBudgetRoute
  '/budget/$year/$month': typeof BudgetYearMonthRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/assistant': typeof AssistantRoute
  '/monthly-budget': typeof MonthlyBudgetRoute
  '/budget/$year/$month': typeof BudgetYearMonthRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/assistant' | '/monthly-budget' | '/budget/$year/$month'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/assistant' | '/monthly-budget' | '/budget/$year/$month'
  id:
    | '__root__'
    | '/'
    | '/assistant'
    | '/monthly-budget'
    | '/budget/$year/$month'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AssistantRoute: typeof AssistantRoute
  MonthlyBudgetRoute: typeof MonthlyBudgetRoute
  BudgetYearMonthRoute: typeof BudgetYearMonthRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/monthly-budget': {
      id: '/monthly-budget'
      path: '/monthly-budget'
      fullPath: '/monthly-budget'
      preLoaderRoute: typeof MonthlyBudgetRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/assistant': {
      id: '/assistant'
      path: '/assistant'
      fullPath: '/assistant'
      preLoaderRoute: typeof AssistantRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/budget/$year/$month': {
      id: '/budget/$year/$month'
      path: '/budget/$year/$month'
      fullPath: '/budget/$year/$month'
      preLoaderRoute: typeof BudgetYearMonthRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AssistantRoute: AssistantRoute,
  MonthlyBudgetRoute: MonthlyBudgetRoute,
  BudgetYearMonthRoute: BudgetYearMonthRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
